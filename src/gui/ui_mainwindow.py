# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ui_mainwindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1024, 800)
        font = QtGui.QFont()
        font.setPointSize(11)
        MainWindow.setFont(font)
        MainWindow.setLayoutDirection(QtCore.Qt.LeftToRight)
        MainWindow.setStyleSheet("# background-color: rgb(31, 1, 94);")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.lcdNumber = QtWidgets.QLCDNumber(self.centralwidget)
        self.lcdNumber.setGeometry(QtCore.QRect(800, 0, 221, 100))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(100)
        sizePolicy.setVerticalStretch(100)
        sizePolicy.setHeightForWidth(self.lcdNumber.sizePolicy().hasHeightForWidth())
        self.lcdNumber.setSizePolicy(sizePolicy)
        self.lcdNumber.setMinimumSize(QtCore.QSize(0, 100))
        self.lcdNumber.setMaximumSize(QtCore.QSize(16777215, 100))
        self.lcdNumber.setSizeIncrement(QtCore.QSize(22, 5))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 128, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(240, 240, 240))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 128, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 128, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(240, 240, 240))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(240, 240, 240))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 128, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(240, 240, 240))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 128, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 128, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(240, 240, 240))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(240, 240, 240))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 128, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(240, 240, 240))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 128, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 128, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(240, 240, 240))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(240, 240, 240))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.lcdNumber.setPalette(palette)
        font = QtGui.QFont()
        font.setPointSize(-1)
        self.lcdNumber.setFont(font)
        self.lcdNumber.setMouseTracking(False)
        self.lcdNumber.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.lcdNumber.setStyleSheet("QLCDNumber {\n"
"    color: green;\n"
"    font-size: 30px; \n"
"    padding: 5px;\n"
"    border: 1px solid #888888;\n"
"    background-color: #F0F0F0;\n"
"}\n"
"QLCDNumber.warning {\n"
"    color: red;\n"
"}")
        self.lcdNumber.setFrameShape(QtWidgets.QFrame.Box)
        self.lcdNumber.setFrameShadow(QtWidgets.QFrame.Plain)
        self.lcdNumber.setLineWidth(4)
        self.lcdNumber.setMidLineWidth(16)
        self.lcdNumber.setSmallDecimalPoint(True)
        self.lcdNumber.setDigitCount(6)
        self.lcdNumber.setMode(QtWidgets.QLCDNumber.Dec)
        self.lcdNumber.setProperty("value", 0.0)
        self.lcdNumber.setObjectName("lcdNumber")
        self.label_img2 = QtWidgets.QLabel(self.centralwidget)
        self.label_img2.setGeometry(QtCore.QRect(0, 0, 800, 600))
        self.label_img2.setMinimumSize(QtCore.QSize(800, 600))
        self.label_img2.setMaximumSize(QtCore.QSize(1920, 1080))
        font = QtGui.QFont()
        font.setFamily("字魂漫画家(商用需授权)")
        font.setPointSize(13)
        self.label_img2.setFont(font)
        self.label_img2.setStyleSheet("self.label_img2.setStyleSheet(\"QLabel {\\n\"\n"
"                              \"    background-image: url(:/images/NOcam.png); \\n\"\n"
"                              \"    background-repeat: no-repeat; \\n\"\n"
"                              \"    background-position: center; \\n\"\n"
"                              \"}\")")
        self.label_img2.setText("")
        self.label_img2.setObjectName("label_img2")
        self.toolButton = QtWidgets.QToolButton(self.centralwidget)
        self.toolButton.setGeometry(QtCore.QRect(820, 120, 191, 51))
        self.toolButton.setObjectName("toolButton")
        self.textEdit = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit.setGeometry(QtCore.QRect(0, 606, 1011, 141))
        self.textEdit.setStyleSheet("QTextEdit {\n"
"    border: 1px solid #999999; /* 灰色细边框，颜色和宽度可按需调整 */\n"
"    border-radius: 5px; /* 圆角，让边框更柔和 */\n"
"    background-color: #E6F7FF; /* 淡蓝色背景，可换其他喜欢的颜色 */\n"
"    font-family: \"微软雅黑\"; /* 易读的字体 */\n"
"    font-size: 12px; /* 字号大小可调整 */\n"
"    color: #333333; /* 深灰色文字，突出显示 */\n"
"}\n"
"QTextEdit:focus {\n"
"    background-color: #F0FFFF; /* 获得焦点时背景色变亮 */\n"
"}")
        self.textEdit.setReadOnly(True)
        self.textEdit.setObjectName("textEdit")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(820, 240, 191, 51))
        self.pushButton.setObjectName("pushButton")
        self.label_img2.raise_()
        self.lcdNumber.raise_()
        self.toolButton.raise_()
        self.textEdit.raise_()
        self.pushButton.raise_()
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1024, 26))
        self.menubar.setObjectName("menubar")
        self.menu = QtWidgets.QMenu(self.menubar)
        self.menu.setObjectName("menu")
        self.menu_3 = QtWidgets.QMenu(self.menu)
        self.menu_3.setObjectName("menu_3")
        self.menu_4 = QtWidgets.QMenu(self.menu)
        self.menu_4.setObjectName("menu_4")
        self.menu_2 = QtWidgets.QMenu(self.menubar)
        self.menu_2.setObjectName("menu_2")
        self.menu_5 = QtWidgets.QMenu(self.menubar)
        self.menu_5.setObjectName("menu_5")
        self.menu_6 = QtWidgets.QMenu(self.menubar)
        self.menu_6.setObjectName("menu_6")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionopencamera = QtWidgets.QAction(MainWindow)
        self.actionopencamera.setObjectName("actionopencamera")
        self.actionopenCam = QtWidgets.QAction(MainWindow)
        self.actionopenCam.setObjectName("actionopenCam")
        self.actioncloseCam = QtWidgets.QAction(MainWindow)
        self.actioncloseCam.setObjectName("actioncloseCam")
        self.actionopenVideo = QtWidgets.QAction(MainWindow)
        self.actionopenVideo.setObjectName("actionopenVideo")
        self.actioncloseVideo = QtWidgets.QAction(MainWindow)
        self.actioncloseVideo.setObjectName("actioncloseVideo")
        self.actionopenImage = QtWidgets.QAction(MainWindow)
        self.actionopenImage.setObjectName("actionopenImage")
        self.actionbeginRecoding = QtWidgets.QAction(MainWindow)
        self.actionbeginRecoding.setObjectName("actionbeginRecoding")
        self.actionendRecoding = QtWidgets.QAction(MainWindow)
        self.actionendRecoding.setObjectName("actionendRecoding")
        self.actionabout = QtWidgets.QAction(MainWindow)
        self.actionabout.setObjectName("actionabout")
        self.actioninstructions = QtWidgets.QAction(MainWindow)
        self.actioninstructions.setObjectName("actioninstructions")
        self.menu_3.addAction(self.actionopenVideo)
        self.menu_3.addAction(self.actioncloseVideo)
        self.menu_4.addAction(self.actionopenImage)
        self.menu.addAction(self.menu_4.menuAction())
        self.menu.addAction(self.menu_3.menuAction())
        self.menu_2.addAction(self.actionopenCam)
        self.menu_2.addAction(self.actioncloseCam)
        self.menu_5.addAction(self.actionbeginRecoding)
        self.menu_5.addAction(self.actionendRecoding)
        self.menu_6.addAction(self.actionabout)
        self.menu_6.addAction(self.actioninstructions)
        self.menubar.addAction(self.menu.menuAction())
        self.menubar.addAction(self.menu_2.menuAction())
        self.menubar.addAction(self.menu_5.menuAction())
        self.menubar.addAction(self.menu_6.menuAction())

        self.retranslateUi(MainWindow)
        self.toolButton.clicked.connect(MainWindow.showNormal) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.toolButton.setText(_translate("MainWindow", "选择媒体"))
        self.pushButton.setText(_translate("MainWindow", "暂停视频"))
        self.menu.setTitle(_translate("MainWindow", "离线识别"))
        self.menu_3.setTitle(_translate("MainWindow", "视频文件"))
        self.menu_4.setTitle(_translate("MainWindow", "图片文件"))
        self.menu_2.setTitle(_translate("MainWindow", "在线识别"))
        self.menu_5.setTitle(_translate("MainWindow", "录制"))
        self.menu_6.setTitle(_translate("MainWindow", "帮助"))
        self.actionopencamera.setText(_translate("MainWindow", "打开摄像头"))
        self.actionopenCam.setText(_translate("MainWindow", "打开摄像头"))
        self.actioncloseCam.setText(_translate("MainWindow", "关闭摄像头"))
        self.actionopenVideo.setText(_translate("MainWindow", "打开"))
        self.actioncloseVideo.setText(_translate("MainWindow", "关闭"))
        self.actionopenImage.setText(_translate("MainWindow", "打开"))
        self.actionbeginRecoding.setText(_translate("MainWindow", "开始录制"))
        self.actionendRecoding.setText(_translate("MainWindow", "结束录制"))
        self.actionabout.setText(_translate("MainWindow", "关于"))
        self.actioninstructions.setText(_translate("MainWindow", "使用说明"))



if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
